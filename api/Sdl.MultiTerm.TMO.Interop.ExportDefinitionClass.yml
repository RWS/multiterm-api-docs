### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  id: ExportDefinitionClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load(System.String)
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save(System.String)
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard(System.String,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  langs:
  - csharp
  - vb
  name: ExportDefinitionClass
  nameWithType: ExportDefinitionClass
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [Guid("E8F19A10-2CA2-4C77-94F9-63DF8A2C0A08")]

      [ClassInterface(ClassInterfaceType.None)]

      public class ExportDefinitionClass : ExportDefinition, IExportDefinition
    content.vb: >-
      <Guid("E8F19A10-2CA2-4C77-94F9-63DF8A2C0A08")>

      <ClassInterface(ClassInterfaceType.None)>

      Public Class ExportDefinitionClass
          Implements ExportDefinition, IExportDefinition
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.ExportDefinition
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: E8F19A10-2CA2-4C77-94F9-63DF8A2C0A08
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard(System.String,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard(System.String,System.String,System.String)
  id: StartWizard(System.String,System.String,System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.StartWizard(String, String, String)
  nameWithType: ExportDefinitionClass.IExportDefinition.StartWizard(String, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IExportDefinition.StartWizard(string XMLFileName, string SourceIndex = "", string TargetIndex = "")
    parameters:
    - id: XMLFileName
      type: System.String
    - id: SourceIndex
      type: System.String
    - id: TargetIndex
      type: System.String
    content.vb: Public Overridable Sub StartWizard(XMLFileName As String, SourceIndex As String = "", TargetIndex As String = "") Implements IExportDefinition.StartWizard
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String,System.String,System.String)
  nameWithType.vb: ExportDefinitionClass.StartWizard(String, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard(System.String, System.String, System.String)
  name.vb: StartWizard(String, String, String)
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete
  id: Delete
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Delete()
  nameWithType: ExportDefinitionClass.IExportDefinition.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IExportDefinition.Delete()
    content.vb: Public Overridable Sub Delete Implements IExportDefinition.Delete
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
  nameWithType.vb: ExportDefinitionClass.Delete()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete()
  name.vb: Delete()
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  id: ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.ProcessExport(MtTaskType, String, String)
  nameWithType: ExportDefinitionClass.IExportDefinition.ProcessExport(MtTaskType, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IExportDefinition.ProcessExport(MtTaskType Value, string SourceIndex = "", string TargetIndex = "")
    parameters:
    - id: Value
      type: Sdl.MultiTerm.TMO.Interop.MtTaskType
    - id: SourceIndex
      type: System.String
    - id: TargetIndex
      type: System.String
    content.vb: Public Overridable Sub ProcessExport(Value As MtTaskType, SourceIndex As String = "", TargetIndex As String = "") Implements IExportDefinition.ProcessExport
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  nameWithType.vb: ExportDefinitionClass.ProcessExport(MtTaskType, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  name.vb: ProcessExport(MtTaskType, String, String)
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save(System.String)
  id: Save(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Save(String)
  nameWithType: ExportDefinitionClass.IExportDefinition.Save(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IExportDefinition.Save(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Public Overridable Sub Save(FileName As String) Implements IExportDefinition.Save
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
  nameWithType.vb: ExportDefinitionClass.Save(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save(System.String)
  name.vb: Save(String)
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load(System.String)
  id: Load(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Load(String)
  nameWithType: ExportDefinitionClass.IExportDefinition.Load(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IExportDefinition.Load(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Public Overridable Sub Load(FileName As String) Implements IExportDefinition.Load
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
  nameWithType.vb: ExportDefinitionClass.Load(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load(System.String)
  name.vb: Load(String)
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  id: Name
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Name
  nameWithType: ExportDefinitionClass.IExportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IExportDefinition.Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String Implements IExportDefinition.Name
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
  nameWithType.vb: ExportDefinitionClass.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  id: Description
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Description
  nameWithType: ExportDefinitionClass.IExportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IExportDefinition.Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Description As String Implements IExportDefinition.Description
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
  nameWithType.vb: ExportDefinitionClass.Description
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  name.vb: Description
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  id: Content
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Content
  nameWithType: ExportDefinitionClass.IExportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IExportDefinition.Content { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Content As String Implements IExportDefinition.Content
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
  nameWithType.vb: ExportDefinitionClass.Content
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  name.vb: Content
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  id: ReadOnly
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.ReadOnly
  nameWithType: ExportDefinitionClass.IExportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool IExportDefinition.ReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property ReadOnly As Boolean Implements IExportDefinition.ReadOnly
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
  nameWithType.vb: ExportDefinitionClass.ReadOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  name.vb: ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  id: Owner
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Owner
  nameWithType: ExportDefinitionClass.IExportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IExportDefinition.Owner { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Owner As String Implements IExportDefinition.Owner
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
  nameWithType.vb: ExportDefinitionClass.Owner
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  name.vb: Owner
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  id: IsSytemObject
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.IsSytemObject
  nameWithType: ExportDefinitionClass.IExportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool IExportDefinition.IsSytemObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsSytemObject As Boolean Implements IExportDefinition.IsSytemObject
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
  nameWithType.vb: ExportDefinitionClass.IsSytemObject
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  name.vb: IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  commentId: P:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  id: Usability
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass
  langs:
  - csharp
  - vb
  name: IExportDefinition.Usability
  nameWithType: ExportDefinitionClass.IExportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual mtObjectUsability IExportDefinition.Usability { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
    content.vb: Public Overridable ReadOnly Property Usability As mtObjectUsability Implements IExportDefinition.Usability
  overload: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
  nameWithType.vb: ExportDefinitionClass.Usability
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  name.vb: Usability
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.ExportDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ExportDefinition
  nameWithType: ExportDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinition
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.IExportDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IExportDefinition
  nameWithType: IExportDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard
  isExternal: true
  name: IExportDefinition.StartWizard
  nameWithType: ExportDefinitionClass.IExportDefinition.StartWizard
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard
  nameWithType.vb: ExportDefinitionClass.StartWizard
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.StartWizard
  name.vb: StartWizard
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: StartWizard(String, String, String)
  nameWithType: IExportDefinition.StartWizard(String, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String, System.String, System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String,System.String,System.String)
    name: StartWizard
    nameWithType: IExportDefinition.StartWizard
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard(System.String,System.String,System.String)
    name: StartWizard
    nameWithType: IExportDefinition.StartWizard
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.StartWizard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete
  isExternal: true
  name: IExportDefinition.Delete
  nameWithType: ExportDefinitionClass.IExportDefinition.Delete
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
  nameWithType.vb: ExportDefinitionClass.Delete
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Delete
  name.vb: Delete
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Delete()
  nameWithType: IExportDefinition.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
    name: Delete
    nameWithType: IExportDefinition.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
    name: Delete
    nameWithType: IExportDefinition.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport
  isExternal: true
  name: IExportDefinition.ProcessExport
  nameWithType: ExportDefinitionClass.IExportDefinition.ProcessExport
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport
  nameWithType.vb: ExportDefinitionClass.ProcessExport
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ProcessExport
  name.vb: ProcessExport
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: ProcessExport(MtTaskType, String, String)
  nameWithType: IExportDefinition.ProcessExport(MtTaskType, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
    name: ProcessExport
    nameWithType: IExportDefinition.ProcessExport
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
    name: MtTaskType
    nameWithType: MtTaskType
    fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
    name: ProcessExport
    nameWithType: IExportDefinition.ProcessExport
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ProcessExport
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
    name: MtTaskType
    nameWithType: MtTaskType
    fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
  commentId: T:Sdl.MultiTerm.TMO.Interop.MtTaskType
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: MtTaskType
  nameWithType: MtTaskType
  fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save
  isExternal: true
  name: IExportDefinition.Save
  nameWithType: ExportDefinitionClass.IExportDefinition.Save
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save
  nameWithType.vb: ExportDefinitionClass.Save
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Save
  name.vb: Save
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Save(String)
  nameWithType: IExportDefinition.Save(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
    name: Save
    nameWithType: IExportDefinition.Save
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save(System.String)
    name: Save
    nameWithType: IExportDefinition.Save
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load
  isExternal: true
  name: IExportDefinition.Load
  nameWithType: ExportDefinitionClass.IExportDefinition.Load
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load
  nameWithType.vb: ExportDefinitionClass.Load
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Load
  name.vb: Load
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Load(String)
  nameWithType: IExportDefinition.Load(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
    name: Load
    nameWithType: IExportDefinition.Load
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load(System.String)
    name: Load
    nameWithType: IExportDefinition.Load
    fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  isExternal: true
  name: IExportDefinition.Name
  nameWithType: ExportDefinitionClass.IExportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
  nameWithType.vb: ExportDefinitionClass.Name
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Name
  nameWithType: IExportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Name
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  isExternal: true
  name: IExportDefinition.Description
  nameWithType: ExportDefinitionClass.IExportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
  nameWithType.vb: ExportDefinitionClass.Description
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Description
  name.vb: Description
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Description
  nameWithType: IExportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Description
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  isExternal: true
  name: IExportDefinition.Content
  nameWithType: ExportDefinitionClass.IExportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
  nameWithType.vb: ExportDefinitionClass.Content
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Content
  name.vb: Content
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Content
  nameWithType: IExportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Content
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  isExternal: true
  name: IExportDefinition.ReadOnly
  nameWithType: ExportDefinitionClass.IExportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
  nameWithType.vb: ExportDefinitionClass.ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.ReadOnly
  name.vb: ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: ReadOnly
  nameWithType: IExportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.ReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  isExternal: true
  name: IExportDefinition.Owner
  nameWithType: ExportDefinitionClass.IExportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
  nameWithType.vb: ExportDefinitionClass.Owner
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Owner
  name.vb: Owner
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Owner
  nameWithType: IExportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Owner
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  isExternal: true
  name: IExportDefinition.IsSytemObject
  nameWithType: ExportDefinitionClass.IExportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
  nameWithType.vb: ExportDefinitionClass.IsSytemObject
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.IsSytemObject
  name.vb: IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: IsSytemObject
  nameWithType: IExportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  isExternal: true
  name: IExportDefinition.Usability
  nameWithType: ExportDefinitionClass.IExportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
  nameWithType.vb: ExportDefinitionClass.Usability
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ExportDefinitionClass.Usability
  name.vb: Usability
- uid: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
  commentId: P:Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
  parent: Sdl.MultiTerm.TMO.Interop.IExportDefinition
  isExternal: true
  name: Usability
  nameWithType: IExportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.IExportDefinition.Usability
- uid: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  commentId: T:Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: mtObjectUsability
  nameWithType: mtObjectUsability
  fullName: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
