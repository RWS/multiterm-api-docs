### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.HomonymClass
  id: HomonymClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  - Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  - Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  langs:
  - csharp
  - vb
  name: HomonymClass
  nameWithType: HomonymClass
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [Guid("63F5433D-2B57-4589-B6A2-96610B8324AD")]

      public class HomonymClass : Homonym, IHomonym
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <Guid("63F5433D-2B57-4589-B6A2-96610B8324AD")>

      Public Class HomonymClass
          Implements Homonym, IHomonym
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.Homonym
  - Sdl.MultiTerm.TMO.Interop.IHomonym
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 63F5433D-2B57-4589-B6A2-96610B8324AD
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  commentId: P:Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  id: Term
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.HomonymClass
  langs:
  - csharp
  - vb
  name: IHomonym.Term
  nameWithType: HomonymClass.IHomonym.Term
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.Term
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IHomonym.Term { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Term As String Implements IHomonym.Term
  overload: Sdl.MultiTerm.TMO.Interop.HomonymClass.Term*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IHomonym.Term
  nameWithType.vb: HomonymClass.Term
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  name.vb: Term
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  commentId: P:Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  id: Index
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.HomonymClass
  langs:
  - csharp
  - vb
  name: IHomonym.Index
  nameWithType: HomonymClass.IHomonym.Index
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.Index
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IHomonym.Index { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Index As String Implements IHomonym.Index
  overload: Sdl.MultiTerm.TMO.Interop.HomonymClass.Index*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IHomonym.Index
  nameWithType.vb: HomonymClass.Index
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  name.vb: Index
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  commentId: P:Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  id: EntryID
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.HomonymClass
  langs:
  - csharp
  - vb
  name: IHomonym.EntryID
  nameWithType: HomonymClass.IHomonym.EntryID
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int IHomonym.EntryID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property EntryID As Integer Implements IHomonym.EntryID
  overload: Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
  nameWithType.vb: HomonymClass.EntryID
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  name.vb: EntryID
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.Homonym
  commentId: T:Sdl.MultiTerm.TMO.Interop.Homonym
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Homonym
  nameWithType: Homonym
  fullName: Sdl.MultiTerm.TMO.Interop.Homonym
- uid: Sdl.MultiTerm.TMO.Interop.IHomonym
  commentId: T:Sdl.MultiTerm.TMO.Interop.IHomonym
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IHomonym
  nameWithType: IHomonym
  fullName: Sdl.MultiTerm.TMO.Interop.IHomonym
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.Term*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  isExternal: true
  name: IHomonym.Term
  nameWithType: HomonymClass.IHomonym.Term
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.Term
  nameWithType.vb: HomonymClass.Term
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.Term
  name.vb: Term
- uid: Sdl.MultiTerm.TMO.Interop.IHomonym.Term
  commentId: P:Sdl.MultiTerm.TMO.Interop.IHomonym.Term
  parent: Sdl.MultiTerm.TMO.Interop.IHomonym
  isExternal: true
  name: Term
  nameWithType: IHomonym.Term
  fullName: Sdl.MultiTerm.TMO.Interop.IHomonym.Term
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.Index*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  isExternal: true
  name: IHomonym.Index
  nameWithType: HomonymClass.IHomonym.Index
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.Index
  nameWithType.vb: HomonymClass.Index
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.Index
  name.vb: Index
- uid: Sdl.MultiTerm.TMO.Interop.IHomonym.Index
  commentId: P:Sdl.MultiTerm.TMO.Interop.IHomonym.Index
  parent: Sdl.MultiTerm.TMO.Interop.IHomonym
  isExternal: true
  name: Index
  nameWithType: IHomonym.Index
  fullName: Sdl.MultiTerm.TMO.Interop.IHomonym.Index
- uid: Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  isExternal: true
  name: IHomonym.EntryID
  nameWithType: HomonymClass.IHomonym.EntryID
  fullName: Sdl.MultiTerm.TMO.Interop.HomonymClass.Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
  nameWithType.vb: HomonymClass.EntryID
  fullName.vb: Sdl.MultiTerm.TMO.Interop.HomonymClass.EntryID
  name.vb: EntryID
- uid: Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
  commentId: P:Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
  parent: Sdl.MultiTerm.TMO.Interop.IHomonym
  isExternal: true
  name: EntryID
  nameWithType: IHomonym.EntryID
  fullName: Sdl.MultiTerm.TMO.Interop.IHomonym.EntryID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
