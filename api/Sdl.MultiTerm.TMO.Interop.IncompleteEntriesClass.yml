### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  id: IncompleteEntriesClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  - Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator
  - Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: IncompleteEntriesClass
  nameWithType: IncompleteEntriesClass
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [Guid("DC8000C5-14FE-4E45-A5D4-90EE24378069")]

      public class IncompleteEntriesClass : IncompleteEntries, IIncompleteEntries, IEnumerable
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <Guid("DC8000C5-14FE-4E45-A5D4-90EE24378069")>

      Public Class IncompleteEntriesClass
          Implements IncompleteEntries, IIncompleteEntries, IEnumerable
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  - Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DC8000C5-14FE-4E45-A5D4-90EE24378069
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator
  commentId: M:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator
  id: GetEnumerator
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  langs:
  - csharp
  - vb
  name: IIncompleteEntries.GetEnumerator()
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.GetEnumerator()
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual IEnumerator IIncompleteEntries.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function GetEnumerator As IEnumerator Implements IIncompleteEntries.GetEnumerator
  overload: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: IncompleteEntriesClass.GetEnumerator()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator()
  name.vb: GetEnumerator()
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item(System.Int32)
  commentId: P:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item(System.Int32)
  id: Item(System.Int32)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  langs:
  - csharp
  - vb
  name: IIncompleteEntries.Item[Int32]
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.Item[Int32]
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item[System.Int32]
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IIncompleteEntries.this[int Index] { get; }
    parameters:
    - id: Index
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Item(Index As Integer) As String Implements IIncompleteEntries.this[]
  overload: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
  nameWithType.vb: IncompleteEntriesClass.Item(Int32)
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  commentId: P:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  id: Count
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass
  langs:
  - csharp
  - vb
  name: IIncompleteEntries.Count
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int IIncompleteEntries.Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Count As Integer Implements IIncompleteEntries.Count
  overload: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
  nameWithType.vb: IncompleteEntriesClass.Count
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  name.vb: Count
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IncompleteEntries
  nameWithType: IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IIncompleteEntries
  nameWithType: IIncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator
  isExternal: true
  name: IIncompleteEntries.GetEnumerator
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.GetEnumerator
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
  nameWithType.vb: IncompleteEntriesClass.GetEnumerator
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.GetEnumerator
  name.vb: GetEnumerator
- uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
  commentId: M:Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
  parent: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  isExternal: true
  name: GetEnumerator()
  nameWithType: IIncompleteEntries.GetEnumerator()
  fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
    name: GetEnumerator
    nameWithType: IIncompleteEntries.GetEnumerator
    fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
    name: GetEnumerator
    nameWithType: IIncompleteEntries.GetEnumerator
    fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item
  isExternal: true
  name: IIncompleteEntries.Item
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.Item
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item
  nameWithType.vb: IncompleteEntriesClass.Item
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Item
  name.vb: Item
- uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
  commentId: P:Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
  parent: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  isExternal: true
  name: Item[Int32]
  nameWithType: IIncompleteEntries.Item[Int32]
  fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item[System.Int32]
  nameWithType.vb: IIncompleteEntries.Item(Int32)
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
    name: Item
    nameWithType: IIncompleteEntries.Item
    fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item(System.Int32)
    name: Item
    nameWithType: IIncompleteEntries.Item
    fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  isExternal: true
  name: IIncompleteEntries.Count
  nameWithType: IncompleteEntriesClass.IIncompleteEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
  nameWithType.vb: IncompleteEntriesClass.Count
  fullName.vb: Sdl.MultiTerm.TMO.Interop.IncompleteEntriesClass.Count
  name.vb: Count
- uid: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
  commentId: P:Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
  parent: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries
  isExternal: true
  name: Count
  nameWithType: IIncompleteEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.IIncompleteEntries.Count
