### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase
  commentId: T:Sdl.MultiTerm.TMO.Interop.ITermbase
  id: ITermbase
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  - Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  - Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  - Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  - Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  - Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  - Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  - Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  - Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  - Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  langs:
  - csharp
  - vb
  name: ITermbase
  nameWithType: ITermbase
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase
  type: Interface
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [Guid("09F8B04F-D0EE-4C79-B644-97031E0E1AD2")]

      public interface ITermbase
    content.vb: >-
      <Guid("09F8B04F-D0EE-4C79-B644-97031E0E1AD2")>

      Public Interface ITermbase
  attributes:
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 09F8B04F-D0EE-4C79-B644-97031E0E1AD2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  id: Reorganise
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Reorganise()
  nameWithType: ITermbase.Reorganise()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Reorganise()
    content.vb: Sub Reorganise
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  id: GetHomonyms(System.String,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: GetHomonyms(String, String, String)
  nameWithType: ITermbase.GetHomonyms(String, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: Homonyms GetHomonyms(string Index, string Source, string Target)
    parameters:
    - id: Index
      type: System.String
    - id: Source
      type: System.String
    - id: Target
      type: System.String
    return:
      type: Sdl.MultiTerm.TMO.Interop.Homonyms
    content.vb: Function GetHomonyms(Index As String, Source As String, Target As String) As Homonyms
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  id: Delete
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: ITermbase.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  id: Close
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ITermbase.Close()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Close()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Close*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  id: ExtractToFile(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ExtractToFile(String)
  nameWithType: ITermbase.ExtractToFile(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void ExtractToFile(string bstr_localFile)
    parameters:
    - id: bstr_localFile
      type: System.String
    content.vb: Sub ExtractToFile(bstr_localFile As String)
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  id: _Reorganise(System.Boolean,System.Boolean,System.Int32)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _Reorganise(Boolean, Boolean, Int32)
  nameWithType: ITermbase._Reorganise(Boolean, Boolean, Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean, System.Boolean, System.Int32)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void _Reorganise(bool vb_encrypt, bool vb_markReadOnly, int l_expiryDate)
    parameters:
    - id: vb_encrypt
      type: System.Boolean
    - id: vb_markReadOnly
      type: System.Boolean
    - id: l_expiryDate
      type: System.Int32
    content.vb: Sub _Reorganise(vb_encrypt As Boolean, vb_markReadOnly As Boolean, l_expiryDate As Integer)
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  id: AddBLOB(System.Int32,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: AddBLOB(Int32, String, String)
  nameWithType: ITermbase.AddBLOB(Int32, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: int AddBLOB(int EntryID, string tag, string blob)
    parameters:
    - id: EntryID
      type: System.Int32
    - id: tag
      type: System.String
    - id: blob
      type: System.String
    return:
      type: System.Int32
    content.vb: Function AddBLOB(EntryID As Integer, tag As String, blob As String) As Integer
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB*
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  id: Entries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: ITermbase.Entries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: Entries Entries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.Entries
    content.vb: ReadOnly Property Entries As Entries
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  id: Definition
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: ITermbase.Definition
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: TermbaseDefinition Definition { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
    content.vb: ReadOnly Property Definition As TermbaseDefinition
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  id: Search
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Search
  nameWithType: ITermbase.Search
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: TermbaseSearch Search { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
    content.vb: ReadOnly Property Search As TermbaseSearch
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Search*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  id: Browse
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Browse
  nameWithType: ITermbase.Browse
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: TermbaseBrowser Browse { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
    content.vb: ReadOnly Property Browse As TermbaseBrowser
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  id: Information
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Information
  nameWithType: ITermbase.Information
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: TermbaseInformation Information { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
    content.vb: ReadOnly Property Information As TermbaseInformation
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Information*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  id: FilterDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: FilterDefinitions
  nameWithType: ITermbase.FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: FilterDefinitions FilterDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
    content.vb: ReadOnly Property FilterDefinitions As FilterDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  id: InputModelDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: InputModelDefinitions
  nameWithType: ITermbase.InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: InputModelDefinitions InputModelDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
    content.vb: ReadOnly Property InputModelDefinitions As InputModelDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  id: ImportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ImportDefinitions
  nameWithType: ITermbase.ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: ImportDefinitions ImportDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
    content.vb: ReadOnly Property ImportDefinitions As ImportDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  id: ExportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ExportDefinitions
  nameWithType: ITermbase.ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: ExportDefinitions ExportDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
    content.vb: ReadOnly Property ExportDefinitions As ExportDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  id: LayoutDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: LayoutDefinitions
  nameWithType: ITermbase.LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: LayoutDefinitions LayoutDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
    content.vb: ReadOnly Property LayoutDefinitions As LayoutDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  id: Name
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITermbase.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  id: ActiveFilter
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ActiveFilter
  nameWithType: ITermbase.ActiveFilter
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: FilterDefinition ActiveFilter { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.FilterDefinition
    content.vb: ReadOnly Property ActiveFilter As FilterDefinition
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  id: AccessPermissions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: AccessPermissions
  nameWithType: ITermbase.AccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: TermbaseAccessPermissions AccessPermissions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
    content.vb: ReadOnly Property AccessPermissions As TermbaseAccessPermissions
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  id: IncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: IncompleteEntries
  nameWithType: ITermbase.IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: IncompleteEntries IncompleteEntries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
    content.vb: ReadOnly Property IncompleteEntries As IncompleteEntries
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  id: LockedEntries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: LockedEntries
  nameWithType: ITermbase.LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: LockedEntries LockedEntries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LockedEntries
    content.vb: ReadOnly Property LockedEntries As LockedEntries
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  id: DefaultEntryClass
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: DefaultEntryClass
  nameWithType: ITermbase.DefaultEntryClass
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string DefaultEntryClass { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DefaultEntryClass As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  id: IsReadOnly
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ITermbase.IsReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  id: ChangeDate
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ChangeDate
  nameWithType: ITermbase.ChangeDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: DateTime ChangeDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: ReadOnly Property ChangeDate As Date
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  id: _Cookie
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _Cookie
  nameWithType: ITermbase._Cookie
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string _Cookie { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property _Cookie As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  id: _IsLocal
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _IsLocal
  nameWithType: ITermbase._IsLocal
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: bool _IsLocal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property _IsLocal As Boolean
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  id: _DefaultEntryClassID
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _DefaultEntryClassID
  nameWithType: ITermbase._DefaultEntryClassID
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: int _DefaultEntryClassID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property _DefaultEntryClassID As Integer
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  id: ExpiryDate
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: ExpiryDate
  nameWithType: ITermbase.ExpiryDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: DateTime ExpiryDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: ReadOnly Property ExpiryDate As Date
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  id: DownloadedCopyrightIcoPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: DownloadedCopyrightIcoPath
  nameWithType: ITermbase.DownloadedCopyrightIcoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string DownloadedCopyrightIcoPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DownloadedCopyrightIcoPath As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  id: DownloadedCopyrightSplashPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: DownloadedCopyrightSplashPath
  nameWithType: ITermbase.DownloadedCopyrightSplashPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string DownloadedCopyrightSplashPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DownloadedCopyrightSplashPath As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  id: DownloadedCopyrightInfoPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: DownloadedCopyrightInfoPath
  nameWithType: ITermbase.DownloadedCopyrightInfoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string DownloadedCopyrightInfoPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DownloadedCopyrightInfoPath As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  id: CopyrightText
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: CopyrightText
  nameWithType: ITermbase.CopyrightText
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string CopyrightText { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CopyrightText As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  id: _TermbaseConnector
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _TermbaseConnector
  nameWithType: ITermbase._TermbaseConnector
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: object _TermbaseConnector { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property _TermbaseConnector As Object
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  id: _Path
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _Path
  nameWithType: ITermbase._Path
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string _Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property _Path As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._Path*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  id: LockedEntryInfos
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: LockedEntryInfos
  nameWithType: ITermbase.LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: LockedEntryInfos LockedEntryInfos { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
    content.vb: ReadOnly Property LockedEntryInfos As LockedEntryInfos
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  id: _TermbaseAPIName
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: _TermbaseAPIName
  nameWithType: ITermbase._TermbaseAPIName
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string _TermbaseAPIName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property _TermbaseAPIName As String
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  id: IsPublished
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  langs:
  - csharp
  - vb
  name: IsPublished
  nameWithType: ITermbase.IsPublished
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: bool IsPublished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPublished As Boolean
  overload: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  isExternal: true
  name: Reorganise
  nameWithType: ITermbase.Reorganise
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms
  isExternal: true
  name: GetHomonyms
  nameWithType: ITermbase.GetHomonyms
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.Homonyms
  commentId: T:Sdl.MultiTerm.TMO.Interop.Homonyms
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Homonyms
  nameWithType: Homonyms
  fullName: Sdl.MultiTerm.TMO.Interop.Homonyms
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  isExternal: true
  name: Delete
  nameWithType: ITermbase.Delete
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Close*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  isExternal: true
  name: Close
  nameWithType: ITermbase.Close
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile
  isExternal: true
  name: ExtractToFile
  nameWithType: ITermbase.ExtractToFile
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise
  isExternal: true
  name: _Reorganise
  nameWithType: ITermbase._Reorganise
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB
  isExternal: true
  name: AddBLOB
  nameWithType: ITermbase.AddBLOB
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  isExternal: true
  name: Entries
  nameWithType: ITermbase.Entries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
- uid: Sdl.MultiTerm.TMO.Interop.Entries
  commentId: T:Sdl.MultiTerm.TMO.Interop.Entries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Entries
  nameWithType: Entries
  fullName: Sdl.MultiTerm.TMO.Interop.Entries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  isExternal: true
  name: Definition
  nameWithType: ITermbase.Definition
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseDefinition
  nameWithType: TermbaseDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Search*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  isExternal: true
  name: Search
  nameWithType: ITermbase.Search
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Search
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseSearch
  nameWithType: TermbaseSearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  isExternal: true
  name: Browse
  nameWithType: ITermbase.Browse
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseBrowser
  nameWithType: TermbaseBrowser
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Information*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  isExternal: true
  name: Information
  nameWithType: ITermbase.Information
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Information
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseInformation
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseInformation
  nameWithType: TermbaseInformation
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  isExternal: true
  name: FilterDefinitions
  nameWithType: ITermbase.FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.FilterDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: FilterDefinitions
  nameWithType: FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  isExternal: true
  name: InputModelDefinitions
  nameWithType: ITermbase.InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: InputModelDefinitions
  nameWithType: InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  isExternal: true
  name: ImportDefinitions
  nameWithType: ITermbase.ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.ImportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ImportDefinitions
  nameWithType: ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  isExternal: true
  name: ExportDefinitions
  nameWithType: ITermbase.ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.ExportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ExportDefinitions
  nameWithType: ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  isExternal: true
  name: LayoutDefinitions
  nameWithType: ITermbase.LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LayoutDefinitions
  nameWithType: LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Name*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  isExternal: true
  name: Name
  nameWithType: ITermbase.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Name
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  isExternal: true
  name: ActiveFilter
  nameWithType: ITermbase.ActiveFilter
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
- uid: Sdl.MultiTerm.TMO.Interop.FilterDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.FilterDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: FilterDefinition
  nameWithType: FilterDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.FilterDefinition
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  isExternal: true
  name: AccessPermissions
  nameWithType: ITermbase.AccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseAccessPermissions
  nameWithType: TermbaseAccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  isExternal: true
  name: IncompleteEntries
  nameWithType: ITermbase.IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IncompleteEntries
  nameWithType: IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  isExternal: true
  name: LockedEntries
  nameWithType: ITermbase.LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.LockedEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.LockedEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LockedEntries
  nameWithType: LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  isExternal: true
  name: DefaultEntryClass
  nameWithType: ITermbase.DefaultEntryClass
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ITermbase.IsReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  isExternal: true
  name: ChangeDate
  nameWithType: ITermbase.ChangeDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  isExternal: true
  name: _Cookie
  nameWithType: ITermbase._Cookie
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  isExternal: true
  name: _IsLocal
  nameWithType: ITermbase._IsLocal
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  isExternal: true
  name: _DefaultEntryClassID
  nameWithType: ITermbase._DefaultEntryClassID
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  isExternal: true
  name: ExpiryDate
  nameWithType: ITermbase.ExpiryDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  isExternal: true
  name: DownloadedCopyrightIcoPath
  nameWithType: ITermbase.DownloadedCopyrightIcoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  isExternal: true
  name: DownloadedCopyrightSplashPath
  nameWithType: ITermbase.DownloadedCopyrightSplashPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  isExternal: true
  name: DownloadedCopyrightInfoPath
  nameWithType: ITermbase.DownloadedCopyrightInfoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  isExternal: true
  name: CopyrightText
  nameWithType: ITermbase.CopyrightText
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  isExternal: true
  name: _TermbaseConnector
  nameWithType: ITermbase._TermbaseConnector
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Path*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  isExternal: true
  name: _Path
  nameWithType: ITermbase._Path
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Path
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  isExternal: true
  name: LockedEntryInfos
  nameWithType: ITermbase.LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
  commentId: T:Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LockedEntryInfos
  nameWithType: LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  isExternal: true
  name: _TermbaseAPIName
  nameWithType: ITermbase._TermbaseAPIName
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  isExternal: true
  name: IsPublished
  nameWithType: ITermbase.IsPublished
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
