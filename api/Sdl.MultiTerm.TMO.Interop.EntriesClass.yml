### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.EntriesClass
  id: EntriesClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.Item(System.Int32)
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.New(System.String,System.Boolean)
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout
  - Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition
  langs:
  - csharp
  - vb
  name: EntriesClass
  nameWithType: EntriesClass
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [Guid("C35D390F-659E-4101-AFD1-CC57029B834F")]

      public class EntriesClass : Entries, IEntries
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <Guid("C35D390F-659E-4101-AFD1-CC57029B834F")>

      Public Class EntriesClass
          Implements Entries, IEntries
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.Entries
  - Sdl.MultiTerm.TMO.Interop.IEntries
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: C35D390F-659E-4101-AFD1-CC57029B834F
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.Item(System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.Item(System.Int32)
  id: Item(System.Int32)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.Item(Int32)
  nameWithType: EntriesClass.IEntries.Item(Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual Entry IEntries.Item(int EntryID)
    parameters:
    - id: EntryID
      type: System.Int32
    return:
      type: Sdl.MultiTerm.TMO.Interop.Entry
    content.vb: Public Overridable Function Item(EntryID As Integer) As Entry Implements IEntries.Item
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.Item*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
  nameWithType.vb: EntriesClass.Item(Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.New(System.String,System.Boolean)
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.New(System.String,System.Boolean)
  id: New(System.String,System.Boolean)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.New(String, Boolean)
  nameWithType: EntriesClass.IEntries.New(String, Boolean)
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String, System.Boolean)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual Entry IEntries.New(string EntryXML, bool Incomplete)
    parameters:
    - id: EntryXML
      type: System.String
    - id: Incomplete
      type: System.Boolean
    return:
      type: Sdl.MultiTerm.TMO.Interop.Entry
    content.vb: Public Overridable Function New(EntryXML As String, Incomplete As Boolean) As Entry Implements IEntries.New
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.New*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String,System.Boolean)
  nameWithType.vb: EntriesClass.New(String, Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.New(System.String, System.Boolean)
  name.vb: New(String, Boolean)
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs
  id: GetEntryIDs
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.GetEntryIDs()
  nameWithType: EntriesClass.IEntries.GetEntryIDs()
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual EntryIDs IEntries.GetEntryIDs()
    return:
      type: Sdl.MultiTerm.TMO.Interop.EntryIDs
    content.vb: Public Overridable Function GetEntryIDs As EntryIDs Implements IEntries.GetEntryIDs
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
  nameWithType.vb: EntriesClass.GetEntryIDs()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs()
  name.vb: GetEntryIDs()
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  id: GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.GetCrossLinkedEntry(Object, String, Int32)
  nameWithType: EntriesClass.IEntries.GetCrossLinkedEntry(Object, String, Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object, System.String, System.Int32)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IEntries.GetCrossLinkedEntry(object Index, string Term, int CurrentEntryId)
    parameters:
    - id: Index
      type: System.Object
    - id: Term
      type: System.String
    - id: CurrentEntryId
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Overridable Function GetCrossLinkedEntry(Index As Object, Term As String, CurrentEntryId As Integer) As String Implements IEntries.GetCrossLinkedEntry
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  nameWithType.vb: EntriesClass.GetCrossLinkedEntry(Object, String, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry(System.Object, System.String, System.Int32)
  name.vb: GetCrossLinkedEntry(Object, String, Int32)
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged
  id: ActiveFilterHasChanged
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.ActiveFilterHasChanged()
  nameWithType: EntriesClass.IEntries.ActiveFilterHasChanged()
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IEntries.ActiveFilterHasChanged()
    content.vb: Public Overridable Sub ActiveFilterHasChanged Implements IEntries.ActiveFilterHasChanged
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
  nameWithType.vb: EntriesClass.ActiveFilterHasChanged()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged()
  name.vb: ActiveFilterHasChanged()
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout
  id: ReloadLayout
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.ReloadLayout()
  nameWithType: EntriesClass.IEntries.ReloadLayout()
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IEntries.ReloadLayout()
    content.vb: Public Overridable Sub ReloadLayout Implements IEntries.ReloadLayout
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
  nameWithType.vb: EntriesClass.ReloadLayout()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout()
  name.vb: ReloadLayout()
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition
  commentId: M:Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition
  id: ReloadTermbaseDefinition
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.ReloadTermbaseDefinition()
  nameWithType: EntriesClass.IEntries.ReloadTermbaseDefinition()
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IEntries.ReloadTermbaseDefinition()
    content.vb: Public Overridable Sub ReloadTermbaseDefinition Implements IEntries.ReloadTermbaseDefinition
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
  nameWithType.vb: EntriesClass.ReloadTermbaseDefinition()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition()
  name.vb: ReloadTermbaseDefinition()
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  commentId: P:Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  id: Count
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.EntriesClass
  langs:
  - csharp
  - vb
  name: IEntries.Count
  nameWithType: EntriesClass.IEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.Count
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int IEntries.Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Count As Integer Implements IEntries.Count
  overload: Sdl.MultiTerm.TMO.Interop.EntriesClass.Count*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IEntries.Count
  nameWithType.vb: EntriesClass.Count
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  name.vb: Count
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.Entries
  commentId: T:Sdl.MultiTerm.TMO.Interop.Entries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Entries
  nameWithType: Entries
  fullName: Sdl.MultiTerm.TMO.Interop.Entries
- uid: Sdl.MultiTerm.TMO.Interop.IEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.IEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IEntries
  nameWithType: IEntries
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.Item*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.Item
  isExternal: true
  name: IEntries.Item
  nameWithType: EntriesClass.IEntries.Item
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.Item
  nameWithType.vb: EntriesClass.Item
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.Item
  name.vb: Item
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: Item(Int32)
  nameWithType: IEntries.Item(Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
    name: Item
    nameWithType: IEntries.Item
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.Item(System.Int32)
    name: Item
    nameWithType: IEntries.Item
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.MultiTerm.TMO.Interop.Entry
  commentId: T:Sdl.MultiTerm.TMO.Interop.Entry
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Entry
  nameWithType: Entry
  fullName: Sdl.MultiTerm.TMO.Interop.Entry
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.New*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.New
  isExternal: true
  name: IEntries.New
  nameWithType: EntriesClass.IEntries.New
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.New
  nameWithType.vb: EntriesClass.New
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.New
  name.vb: New
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String,System.Boolean)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String,System.Boolean)
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: New(String, Boolean)
  nameWithType: IEntries.New(String, Boolean)
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String, System.Boolean)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String,System.Boolean)
    name: New
    nameWithType: IEntries.New
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.New
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.New(System.String,System.Boolean)
    name: New
    nameWithType: IEntries.New
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.New
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs
  isExternal: true
  name: IEntries.GetEntryIDs
  nameWithType: EntriesClass.IEntries.GetEntryIDs
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
  nameWithType.vb: EntriesClass.GetEntryIDs
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetEntryIDs
  name.vb: GetEntryIDs
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: GetEntryIDs()
  nameWithType: IEntries.GetEntryIDs()
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
    name: GetEntryIDs
    nameWithType: IEntries.GetEntryIDs
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
    name: GetEntryIDs
    nameWithType: IEntries.GetEntryIDs
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetEntryIDs
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.EntryIDs
  commentId: T:Sdl.MultiTerm.TMO.Interop.EntryIDs
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: EntryIDs
  nameWithType: EntryIDs
  fullName: Sdl.MultiTerm.TMO.Interop.EntryIDs
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry
  isExternal: true
  name: IEntries.GetCrossLinkedEntry
  nameWithType: EntriesClass.IEntries.GetCrossLinkedEntry
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry
  nameWithType.vb: EntriesClass.GetCrossLinkedEntry
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.GetCrossLinkedEntry
  name.vb: GetCrossLinkedEntry
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: GetCrossLinkedEntry(Object, String, Int32)
  nameWithType: IEntries.GetCrossLinkedEntry(Object, String, Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object, System.String, System.Int32)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
    name: GetCrossLinkedEntry
    nameWithType: IEntries.GetCrossLinkedEntry
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry(System.Object,System.String,System.Int32)
    name: GetCrossLinkedEntry
    nameWithType: IEntries.GetCrossLinkedEntry
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.GetCrossLinkedEntry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged
  isExternal: true
  name: IEntries.ActiveFilterHasChanged
  nameWithType: EntriesClass.IEntries.ActiveFilterHasChanged
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
  nameWithType.vb: EntriesClass.ActiveFilterHasChanged
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ActiveFilterHasChanged
  name.vb: ActiveFilterHasChanged
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: ActiveFilterHasChanged()
  nameWithType: IEntries.ActiveFilterHasChanged()
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
    name: ActiveFilterHasChanged
    nameWithType: IEntries.ActiveFilterHasChanged
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
    name: ActiveFilterHasChanged
    nameWithType: IEntries.ActiveFilterHasChanged
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ActiveFilterHasChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout
  isExternal: true
  name: IEntries.ReloadLayout
  nameWithType: EntriesClass.IEntries.ReloadLayout
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
  nameWithType.vb: EntriesClass.ReloadLayout
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadLayout
  name.vb: ReloadLayout
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: ReloadLayout()
  nameWithType: IEntries.ReloadLayout()
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
    name: ReloadLayout
    nameWithType: IEntries.ReloadLayout
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
    name: ReloadLayout
    nameWithType: IEntries.ReloadLayout
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadLayout
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition
  isExternal: true
  name: IEntries.ReloadTermbaseDefinition
  nameWithType: EntriesClass.IEntries.ReloadTermbaseDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
  nameWithType.vb: EntriesClass.ReloadTermbaseDefinition
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.ReloadTermbaseDefinition
  name.vb: ReloadTermbaseDefinition
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
  commentId: M:Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: ReloadTermbaseDefinition()
  nameWithType: IEntries.ReloadTermbaseDefinition()
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
    name: ReloadTermbaseDefinition
    nameWithType: IEntries.ReloadTermbaseDefinition
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
    name: ReloadTermbaseDefinition
    nameWithType: IEntries.ReloadTermbaseDefinition
    fullName: Sdl.MultiTerm.TMO.Interop.IEntries.ReloadTermbaseDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.EntriesClass.Count*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  isExternal: true
  name: IEntries.Count
  nameWithType: EntriesClass.IEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.EntriesClass.Sdl.MultiTerm.TMO.Interop.IEntries.Count
  nameWithType.vb: EntriesClass.Count
  fullName.vb: Sdl.MultiTerm.TMO.Interop.EntriesClass.Count
  name.vb: Count
- uid: Sdl.MultiTerm.TMO.Interop.IEntries.Count
  commentId: P:Sdl.MultiTerm.TMO.Interop.IEntries.Count
  parent: Sdl.MultiTerm.TMO.Interop.IEntries
  isExternal: true
  name: Count
  nameWithType: IEntries.Count
  fullName: Sdl.MultiTerm.TMO.Interop.IEntries.Count
