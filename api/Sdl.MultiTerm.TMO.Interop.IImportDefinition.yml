### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.IImportDefinition
  id: IImportDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  langs:
  - csharp
  - vb
  name: IImportDefinition
  nameWithType: IImportDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  type: Interface
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [Guid("91E53329-70EE-402B-884C-E37434B09D34")]

      public interface IImportDefinition
    content.vb: >-
      <Guid("91E53329-70EE-402B-884C-E37434B09D34")>

      Public Interface IImportDefinition
  attributes:
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 91E53329-70EE-402B-884C-E37434B09D34
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  id: StartWizard(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: StartWizard(String)
  nameWithType: IImportDefinition.StartWizard(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void StartWizard(string XMLFileName)
    parameters:
    - id: XMLFileName
      type: System.String
    content.vb: Sub StartWizard(XMLFileName As String)
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard*
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  id: Delete
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: IImportDefinition.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete*
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  id: ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: ProcessImport(MtTaskType, String, String)
  nameWithType: IImportDefinition.ProcessImport(MtTaskType, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void ProcessImport(MtTaskType Value, string SourceIndex = "", string TargetIndex = "")
    parameters:
    - id: Value
      type: Sdl.MultiTerm.TMO.Interop.MtTaskType
    - id: SourceIndex
      type: System.String
    - id: TargetIndex
      type: System.String
    content.vb: Sub ProcessImport(Value As MtTaskType, SourceIndex As String = "", TargetIndex As String = "")
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport*
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  id: Save(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: IImportDefinition.Save(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Save(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Sub Save(FileName As String)
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save*
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  id: Load(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: IImportDefinition.Load(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: void Load(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Sub Load(FileName As String)
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load*
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  id: Name
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IImportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  id: Description
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IImportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  id: Content
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: IImportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string Content { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Content As String
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  id: ReadOnly
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: IImportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: bool ReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ReadOnly As Boolean
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  id: Owner
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: IImportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: string Owner { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Owner As String
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  id: IsSytemObject
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: IsSytemObject
  nameWithType: IImportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: bool IsSytemObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsSytemObject As Boolean
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  id: Usability
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  langs:
  - csharp
  - vb
  name: Usability
  nameWithType: IImportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: mtObjectUsability Usability { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
    content.vb: ReadOnly Property Usability As mtObjectUsability
  overload: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard
  isExternal: true
  name: StartWizard
  nameWithType: IImportDefinition.StartWizard
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  isExternal: true
  name: Delete
  nameWithType: IImportDefinition.Delete
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport
  isExternal: true
  name: ProcessImport
  nameWithType: IImportDefinition.ProcessImport
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport
- uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
  commentId: T:Sdl.MultiTerm.TMO.Interop.MtTaskType
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: MtTaskType
  nameWithType: MtTaskType
  fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save
  isExternal: true
  name: Save
  nameWithType: IImportDefinition.Save
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load
  isExternal: true
  name: Load
  nameWithType: IImportDefinition.Load
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  isExternal: true
  name: Name
  nameWithType: IImportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  isExternal: true
  name: Description
  nameWithType: IImportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  isExternal: true
  name: Content
  nameWithType: IImportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  isExternal: true
  name: ReadOnly
  nameWithType: IImportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  isExternal: true
  name: Owner
  nameWithType: IImportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  isExternal: true
  name: IsSytemObject
  nameWithType: IImportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  isExternal: true
  name: Usability
  nameWithType: IImportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
- uid: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  commentId: T:Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: mtObjectUsability
  nameWithType: mtObjectUsability
  fullName: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
