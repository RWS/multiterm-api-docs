### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  id: TermbaseSearchClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise
  langs:
  - csharp
  - vb
  name: TermbaseSearchClass
  nameWithType: TermbaseSearchClass
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [Guid("3F9C1C88-74B7-44A9-8925-D59CD29B4A38")]

      public class TermbaseSearchClass : TermbaseSearch, ITermbaseSearch
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <Guid("3F9C1C88-74B7-44A9-8925-D59CD29B4A38")>

      Public Class TermbaseSearchClass
          Implements TermbaseSearch, ITermbaseSearch
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 3F9C1C88-74B7-44A9-8925-D59CD29B4A38
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute
  id: Execute
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.Execute()
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Execute()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual HitTerms ITermbaseSearch.Execute()
    return:
      type: Sdl.MultiTerm.TMO.Interop.HitTerms
    content.vb: Public Overridable Function Execute As HitTerms Implements ITermbaseSearch.Execute
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
  nameWithType.vb: TermbaseSearchClass.Execute()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute()
  name.vb: Execute()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  id: Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.Advise(MultiSearch)
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Advise(MultiSearch)
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbaseSearch.Advise(MultiSearch AdvancedSearchObject)
    parameters:
    - id: AdvancedSearchObject
      type: Sdl.MultiTerm.TMO.Interop.MultiSearch
    content.vb: Public Overridable Sub Advise(AdvancedSearchObject As MultiSearch) Implements ITermbaseSearch.Advise
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  nameWithType.vb: TermbaseSearchClass.Advise(MultiSearch)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  name.vb: Advise(MultiSearch)
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise
  id: Unadvise
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.Unadvise()
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Unadvise()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbaseSearch.Unadvise()
    content.vb: Public Overridable Sub Unadvise Implements ITermbaseSearch.Unadvise
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
  nameWithType.vb: TermbaseSearchClass.Unadvise()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise()
  name.vb: Unadvise()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch
  id: CancelSearch
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.CancelSearch()
  nameWithType: TermbaseSearchClass.ITermbaseSearch.CancelSearch()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbaseSearch.CancelSearch()
    content.vb: Public Overridable Sub CancelSearch Implements ITermbaseSearch.CancelSearch
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
  nameWithType.vb: TermbaseSearchClass.CancelSearch()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch()
  name.vb: CancelSearch()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  id: SearchExpression
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.SearchExpression
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SearchExpression
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbaseSearch.SearchExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SearchExpression As String Implements ITermbaseSearch.SearchExpression
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
  nameWithType.vb: TermbaseSearchClass.SearchExpression
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  name.vb: SearchExpression
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  id: SourceIndex
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.SourceIndex
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SourceIndex
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbaseSearch.SourceIndex { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SourceIndex As String Implements ITermbaseSearch.SourceIndex
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
  nameWithType.vb: TermbaseSearchClass.SourceIndex
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  name.vb: SourceIndex
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  id: Direction
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.Direction
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Direction
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual MtSearchDirection ITermbaseSearch.Direction { get; set; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.MtSearchDirection
    content.vb: Public Overridable Property Direction As MtSearchDirection Implements ITermbaseSearch.Direction
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
  nameWithType.vb: TermbaseSearchClass.Direction
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  name.vb: Direction
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  id: MaximumHits
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.MaximumHits
  nameWithType: TermbaseSearchClass.ITermbaseSearch.MaximumHits
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int ITermbaseSearch.MaximumHits { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property MaximumHits As Integer Implements ITermbaseSearch.MaximumHits
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
  nameWithType.vb: TermbaseSearchClass.MaximumHits
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  name.vb: MaximumHits
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  id: LastTerm
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.LastTerm
  nameWithType: TermbaseSearchClass.ITermbaseSearch.LastTerm
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbaseSearch.LastTerm { set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable WriteOnly Property LastTerm As String Implements ITermbaseSearch.LastTerm
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
  nameWithType.vb: TermbaseSearchClass.LastTerm
  modifiers.csharp:
  - public
  - virtual
  - set
  modifiers.vb:
  - Public
  - Overridable
  - WriteOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  name.vb: LastTerm
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  id: StartingEntryID
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.StartingEntryID
  nameWithType: TermbaseSearchClass.ITermbaseSearch.StartingEntryID
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int ITermbaseSearch.StartingEntryID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property StartingEntryID As Integer Implements ITermbaseSearch.StartingEntryID
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
  nameWithType.vb: TermbaseSearchClass.StartingEntryID
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  name.vb: StartingEntryID
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  id: TargetIndex
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.TargetIndex
  nameWithType: TermbaseSearchClass.ITermbaseSearch.TargetIndex
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbaseSearch.TargetIndex { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property TargetIndex As String Implements ITermbaseSearch.TargetIndex
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
  nameWithType.vb: TermbaseSearchClass.TargetIndex
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  name.vb: TargetIndex
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  id: FuzzySearch
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.FuzzySearch
  nameWithType: TermbaseSearchClass.ITermbaseSearch.FuzzySearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool ITermbaseSearch.FuzzySearch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property FuzzySearch As Boolean Implements ITermbaseSearch.FuzzySearch
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
  nameWithType.vb: TermbaseSearchClass.FuzzySearch
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  name.vb: FuzzySearch
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  id: SearchExistTarget
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass
  langs:
  - csharp
  - vb
  name: ITermbaseSearch.SearchExistTarget
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SearchExistTarget
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool ITermbaseSearch.SearchExistTarget { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property SearchExistTarget As Boolean Implements ITermbaseSearch.SearchExistTarget
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
  nameWithType.vb: TermbaseSearchClass.SearchExistTarget
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  name.vb: SearchExistTarget
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseSearch
  nameWithType: TermbaseSearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  commentId: T:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ITermbaseSearch
  nameWithType: ITermbaseSearch
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute
  isExternal: true
  name: ITermbaseSearch.Execute
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Execute
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
  nameWithType.vb: TermbaseSearchClass.Execute
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Execute
  name.vb: Execute
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: Execute()
  nameWithType: ITermbaseSearch.Execute()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
    name: Execute
    nameWithType: ITermbaseSearch.Execute
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
    name: Execute
    nameWithType: ITermbaseSearch.Execute
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Execute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.HitTerms
  commentId: T:Sdl.MultiTerm.TMO.Interop.HitTerms
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: HitTerms
  nameWithType: HitTerms
  fullName: Sdl.MultiTerm.TMO.Interop.HitTerms
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise
  isExternal: true
  name: ITermbaseSearch.Advise
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Advise
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise
  nameWithType.vb: TermbaseSearchClass.Advise
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Advise
  name.vb: Advise
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: Advise(MultiSearch)
  nameWithType: ITermbaseSearch.Advise(MultiSearch)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
    name: Advise
    nameWithType: ITermbaseSearch.Advise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MultiSearch
    name: MultiSearch
    nameWithType: MultiSearch
    fullName: Sdl.MultiTerm.TMO.Interop.MultiSearch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise(Sdl.MultiTerm.TMO.Interop.MultiSearch)
    name: Advise
    nameWithType: ITermbaseSearch.Advise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Advise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MultiSearch
    name: MultiSearch
    nameWithType: MultiSearch
    fullName: Sdl.MultiTerm.TMO.Interop.MultiSearch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.MultiSearch
  commentId: T:Sdl.MultiTerm.TMO.Interop.MultiSearch
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: MultiSearch
  nameWithType: MultiSearch
  fullName: Sdl.MultiTerm.TMO.Interop.MultiSearch
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise
  isExternal: true
  name: ITermbaseSearch.Unadvise
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Unadvise
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
  nameWithType.vb: TermbaseSearchClass.Unadvise
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Unadvise
  name.vb: Unadvise
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: Unadvise()
  nameWithType: ITermbaseSearch.Unadvise()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
    name: Unadvise
    nameWithType: ITermbaseSearch.Unadvise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
    name: Unadvise
    nameWithType: ITermbaseSearch.Unadvise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Unadvise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch
  isExternal: true
  name: ITermbaseSearch.CancelSearch
  nameWithType: TermbaseSearchClass.ITermbaseSearch.CancelSearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
  nameWithType.vb: TermbaseSearchClass.CancelSearch
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.CancelSearch
  name.vb: CancelSearch
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: CancelSearch()
  nameWithType: ITermbaseSearch.CancelSearch()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
    name: CancelSearch
    nameWithType: ITermbaseSearch.CancelSearch
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
    name: CancelSearch
    nameWithType: ITermbaseSearch.CancelSearch
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.CancelSearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  isExternal: true
  name: ITermbaseSearch.SearchExpression
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SearchExpression
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
  nameWithType.vb: TermbaseSearchClass.SearchExpression
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExpression
  name.vb: SearchExpression
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: SearchExpression
  nameWithType: ITermbaseSearch.SearchExpression
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExpression
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  isExternal: true
  name: ITermbaseSearch.SourceIndex
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SourceIndex
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
  nameWithType.vb: TermbaseSearchClass.SourceIndex
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SourceIndex
  name.vb: SourceIndex
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: SourceIndex
  nameWithType: ITermbaseSearch.SourceIndex
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SourceIndex
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  isExternal: true
  name: ITermbaseSearch.Direction
  nameWithType: TermbaseSearchClass.ITermbaseSearch.Direction
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
  nameWithType.vb: TermbaseSearchClass.Direction
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Direction
  name.vb: Direction
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: Direction
  nameWithType: ITermbaseSearch.Direction
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.Direction
- uid: Sdl.MultiTerm.TMO.Interop.MtSearchDirection
  commentId: T:Sdl.MultiTerm.TMO.Interop.MtSearchDirection
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: MtSearchDirection
  nameWithType: MtSearchDirection
  fullName: Sdl.MultiTerm.TMO.Interop.MtSearchDirection
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  isExternal: true
  name: ITermbaseSearch.MaximumHits
  nameWithType: TermbaseSearchClass.ITermbaseSearch.MaximumHits
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
  nameWithType.vb: TermbaseSearchClass.MaximumHits
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.MaximumHits
  name.vb: MaximumHits
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: MaximumHits
  nameWithType: ITermbaseSearch.MaximumHits
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.MaximumHits
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  isExternal: true
  name: ITermbaseSearch.LastTerm
  nameWithType: TermbaseSearchClass.ITermbaseSearch.LastTerm
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
  nameWithType.vb: TermbaseSearchClass.LastTerm
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.LastTerm
  name.vb: LastTerm
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: LastTerm
  nameWithType: ITermbaseSearch.LastTerm
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.LastTerm
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  isExternal: true
  name: ITermbaseSearch.StartingEntryID
  nameWithType: TermbaseSearchClass.ITermbaseSearch.StartingEntryID
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
  nameWithType.vb: TermbaseSearchClass.StartingEntryID
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.StartingEntryID
  name.vb: StartingEntryID
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: StartingEntryID
  nameWithType: ITermbaseSearch.StartingEntryID
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.StartingEntryID
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  isExternal: true
  name: ITermbaseSearch.TargetIndex
  nameWithType: TermbaseSearchClass.ITermbaseSearch.TargetIndex
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
  nameWithType.vb: TermbaseSearchClass.TargetIndex
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.TargetIndex
  name.vb: TargetIndex
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: TargetIndex
  nameWithType: ITermbaseSearch.TargetIndex
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.TargetIndex
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  isExternal: true
  name: ITermbaseSearch.FuzzySearch
  nameWithType: TermbaseSearchClass.ITermbaseSearch.FuzzySearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
  nameWithType.vb: TermbaseSearchClass.FuzzySearch
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.FuzzySearch
  name.vb: FuzzySearch
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: FuzzySearch
  nameWithType: ITermbaseSearch.FuzzySearch
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.FuzzySearch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  isExternal: true
  name: ITermbaseSearch.SearchExistTarget
  nameWithType: TermbaseSearchClass.ITermbaseSearch.SearchExistTarget
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
  nameWithType.vb: TermbaseSearchClass.SearchExistTarget
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseSearchClass.SearchExistTarget
  name.vb: SearchExistTarget
- uid: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
  parent: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch
  isExternal: true
  name: SearchExistTarget
  nameWithType: ITermbaseSearch.SearchExistTarget
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbaseSearch.SearchExistTarget
