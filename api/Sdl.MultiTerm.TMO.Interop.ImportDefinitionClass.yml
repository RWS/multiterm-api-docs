### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  id: ImportDefinitionClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load(System.String)
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save(System.String)
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard(System.String)
  - Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  langs:
  - csharp
  - vb
  name: ImportDefinitionClass
  nameWithType: ImportDefinitionClass
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [ClassInterface(ClassInterfaceType.None)]

      [Guid("7EE60018-8654-44D2-ADD9-0C1122E090EB")]

      public class ImportDefinitionClass : ImportDefinition, IImportDefinition
    content.vb: >-
      <ClassInterface(ClassInterfaceType.None)>

      <Guid("7EE60018-8654-44D2-ADD9-0C1122E090EB")>

      Public Class ImportDefinitionClass
          Implements ImportDefinition, IImportDefinition
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.ImportDefinition
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 7EE60018-8654-44D2-ADD9-0C1122E090EB
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard(System.String)
  id: StartWizard(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.StartWizard(String)
  nameWithType: ImportDefinitionClass.IImportDefinition.StartWizard(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IImportDefinition.StartWizard(string XMLFileName)
    parameters:
    - id: XMLFileName
      type: System.String
    content.vb: Public Overridable Sub StartWizard(XMLFileName As String) Implements IImportDefinition.StartWizard
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  nameWithType.vb: ImportDefinitionClass.StartWizard(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard(System.String)
  name.vb: StartWizard(String)
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete
  id: Delete
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Delete()
  nameWithType: ImportDefinitionClass.IImportDefinition.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IImportDefinition.Delete()
    content.vb: Public Overridable Sub Delete Implements IImportDefinition.Delete
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  nameWithType.vb: ImportDefinitionClass.Delete()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete()
  name.vb: Delete()
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  id: ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.ProcessImport(MtTaskType, String, String)
  nameWithType: ImportDefinitionClass.IImportDefinition.ProcessImport(MtTaskType, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IImportDefinition.ProcessImport(MtTaskType Value, string SourceIndex = "", string TargetIndex = "")
    parameters:
    - id: Value
      type: Sdl.MultiTerm.TMO.Interop.MtTaskType
    - id: SourceIndex
      type: System.String
    - id: TargetIndex
      type: System.String
    content.vb: Public Overridable Sub ProcessImport(Value As MtTaskType, SourceIndex As String = "", TargetIndex As String = "") Implements IImportDefinition.ProcessImport
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  nameWithType.vb: ImportDefinitionClass.ProcessImport(MtTaskType, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  name.vb: ProcessImport(MtTaskType, String, String)
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save(System.String)
  id: Save(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Save(String)
  nameWithType: ImportDefinitionClass.IImportDefinition.Save(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IImportDefinition.Save(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Public Overridable Sub Save(FileName As String) Implements IImportDefinition.Save
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  nameWithType.vb: ImportDefinitionClass.Save(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save(System.String)
  name.vb: Save(String)
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load(System.String)
  id: Load(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Load(String)
  nameWithType: ImportDefinitionClass.IImportDefinition.Load(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void IImportDefinition.Load(string FileName)
    parameters:
    - id: FileName
      type: System.String
    content.vb: Public Overridable Sub Load(FileName As String) Implements IImportDefinition.Load
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  nameWithType.vb: ImportDefinitionClass.Load(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load(System.String)
  name.vb: Load(String)
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  id: Name
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Name
  nameWithType: ImportDefinitionClass.IImportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IImportDefinition.Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String Implements IImportDefinition.Name
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  nameWithType.vb: ImportDefinitionClass.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  id: Description
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Description
  nameWithType: ImportDefinitionClass.IImportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IImportDefinition.Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Description As String Implements IImportDefinition.Description
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  nameWithType.vb: ImportDefinitionClass.Description
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  name.vb: Description
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  id: Content
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Content
  nameWithType: ImportDefinitionClass.IImportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IImportDefinition.Content { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Content As String Implements IImportDefinition.Content
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  nameWithType.vb: ImportDefinitionClass.Content
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  name.vb: Content
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  id: ReadOnly
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.ReadOnly
  nameWithType: ImportDefinitionClass.IImportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool IImportDefinition.ReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property ReadOnly As Boolean Implements IImportDefinition.ReadOnly
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  nameWithType.vb: ImportDefinitionClass.ReadOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  name.vb: ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  id: Owner
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Owner
  nameWithType: ImportDefinitionClass.IImportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string IImportDefinition.Owner { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Owner As String Implements IImportDefinition.Owner
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  nameWithType.vb: ImportDefinitionClass.Owner
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  name.vb: Owner
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  id: IsSytemObject
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.IsSytemObject
  nameWithType: ImportDefinitionClass.IImportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool IImportDefinition.IsSytemObject { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsSytemObject As Boolean Implements IImportDefinition.IsSytemObject
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  nameWithType.vb: ImportDefinitionClass.IsSytemObject
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  name.vb: IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  commentId: P:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  id: Usability
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass
  langs:
  - csharp
  - vb
  name: IImportDefinition.Usability
  nameWithType: ImportDefinitionClass.IImportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual mtObjectUsability IImportDefinition.Usability { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
    content.vb: Public Overridable ReadOnly Property Usability As mtObjectUsability Implements IImportDefinition.Usability
  overload: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability*
  implements:
  - Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  nameWithType.vb: ImportDefinitionClass.Usability
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  name.vb: Usability
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.ImportDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinition
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.IImportDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IImportDefinition
  nameWithType: IImportDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard
  isExternal: true
  name: IImportDefinition.StartWizard
  nameWithType: ImportDefinitionClass.IImportDefinition.StartWizard
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard
  nameWithType.vb: ImportDefinitionClass.StartWizard
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.StartWizard
  name.vb: StartWizard
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: StartWizard(String)
  nameWithType: IImportDefinition.StartWizard(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
    name: StartWizard
    nameWithType: IImportDefinition.StartWizard
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard(System.String)
    name: StartWizard
    nameWithType: IImportDefinition.StartWizard
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.StartWizard
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete
  isExternal: true
  name: IImportDefinition.Delete
  nameWithType: ImportDefinitionClass.IImportDefinition.Delete
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  nameWithType.vb: ImportDefinitionClass.Delete
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Delete
  name.vb: Delete
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Delete()
  nameWithType: IImportDefinition.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
    name: Delete
    nameWithType: IImportDefinition.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
    name: Delete
    nameWithType: IImportDefinition.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport
  isExternal: true
  name: IImportDefinition.ProcessImport
  nameWithType: ImportDefinitionClass.IImportDefinition.ProcessImport
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport
  nameWithType.vb: ImportDefinitionClass.ProcessImport
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ProcessImport
  name.vb: ProcessImport
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: ProcessImport(MtTaskType, String, String)
  nameWithType: IImportDefinition.ProcessImport(MtTaskType, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType, System.String, System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
    name: ProcessImport
    nameWithType: IImportDefinition.ProcessImport
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
    name: MtTaskType
    nameWithType: MtTaskType
    fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport(Sdl.MultiTerm.TMO.Interop.MtTaskType,System.String,System.String)
    name: ProcessImport
    nameWithType: IImportDefinition.ProcessImport
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ProcessImport
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
    name: MtTaskType
    nameWithType: MtTaskType
    fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.MtTaskType
  commentId: T:Sdl.MultiTerm.TMO.Interop.MtTaskType
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: MtTaskType
  nameWithType: MtTaskType
  fullName: Sdl.MultiTerm.TMO.Interop.MtTaskType
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save
  isExternal: true
  name: IImportDefinition.Save
  nameWithType: ImportDefinitionClass.IImportDefinition.Save
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save
  nameWithType.vb: ImportDefinitionClass.Save
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Save
  name.vb: Save
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Save(String)
  nameWithType: IImportDefinition.Save(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
    name: Save
    nameWithType: IImportDefinition.Save
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save(System.String)
    name: Save
    nameWithType: IImportDefinition.Save
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load
  isExternal: true
  name: IImportDefinition.Load
  nameWithType: ImportDefinitionClass.IImportDefinition.Load
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load
  nameWithType.vb: ImportDefinitionClass.Load
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Load
  name.vb: Load
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Load(String)
  nameWithType: IImportDefinition.Load(String)
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
    name: Load
    nameWithType: IImportDefinition.Load
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load(System.String)
    name: Load
    nameWithType: IImportDefinition.Load
    fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  isExternal: true
  name: IImportDefinition.Name
  nameWithType: ImportDefinitionClass.IImportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  nameWithType.vb: ImportDefinitionClass.Name
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Name
  nameWithType: IImportDefinition.Name
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Name
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  isExternal: true
  name: IImportDefinition.Description
  nameWithType: ImportDefinitionClass.IImportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  nameWithType.vb: ImportDefinitionClass.Description
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Description
  name.vb: Description
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Description
  nameWithType: IImportDefinition.Description
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Description
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  isExternal: true
  name: IImportDefinition.Content
  nameWithType: ImportDefinitionClass.IImportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  nameWithType.vb: ImportDefinitionClass.Content
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Content
  name.vb: Content
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Content
  nameWithType: IImportDefinition.Content
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Content
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  isExternal: true
  name: IImportDefinition.ReadOnly
  nameWithType: ImportDefinitionClass.IImportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  nameWithType.vb: ImportDefinitionClass.ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.ReadOnly
  name.vb: ReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: ReadOnly
  nameWithType: IImportDefinition.ReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.ReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  isExternal: true
  name: IImportDefinition.Owner
  nameWithType: ImportDefinitionClass.IImportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  nameWithType.vb: ImportDefinitionClass.Owner
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Owner
  name.vb: Owner
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Owner
  nameWithType: IImportDefinition.Owner
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Owner
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  isExternal: true
  name: IImportDefinition.IsSytemObject
  nameWithType: ImportDefinitionClass.IImportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  nameWithType.vb: ImportDefinitionClass.IsSytemObject
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.IsSytemObject
  name.vb: IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: IsSytemObject
  nameWithType: IImportDefinition.IsSytemObject
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.IsSytemObject
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  isExternal: true
  name: IImportDefinition.Usability
  nameWithType: ImportDefinitionClass.IImportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  nameWithType.vb: ImportDefinitionClass.Usability
  fullName.vb: Sdl.MultiTerm.TMO.Interop.ImportDefinitionClass.Usability
  name.vb: Usability
- uid: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  commentId: P:Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
  parent: Sdl.MultiTerm.TMO.Interop.IImportDefinition
  isExternal: true
  name: Usability
  nameWithType: IImportDefinition.Usability
  fullName: Sdl.MultiTerm.TMO.Interop.IImportDefinition.Usability
- uid: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  commentId: T:Sdl.MultiTerm.TMO.Interop.mtObjectUsability
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: mtObjectUsability
  nameWithType: mtObjectUsability
  fullName: Sdl.MultiTerm.TMO.Interop.mtObjectUsability
