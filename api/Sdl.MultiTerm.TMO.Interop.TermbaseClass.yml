### YamlMime:ManagedReference
items:
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseClass
  id: TermbaseClass
  parent: Sdl.MultiTerm.TMO.Interop
  children:
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise(System.Boolean,System.Boolean,System.Int32)
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB(System.Int32,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile(System.String)
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms(System.String,System.String,System.String)
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise
  - Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  langs:
  - csharp
  - vb
  name: TermbaseClass
  nameWithType: TermbaseClass
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  type: Class
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: >-
      [Guid("FADF0A68-FA7D-4633-955D-B3CDB2D44FDD")]

      [ClassInterface(ClassInterfaceType.None)]

      public class TermbaseClass : Termbase, ITermbase
    content.vb: >-
      <Guid("FADF0A68-FA7D-4633-955D-B3CDB2D44FDD")>

      <ClassInterface(ClassInterfaceType.None)>

      Public Class TermbaseClass
          Implements Termbase, ITermbase
  inheritance:
  - System.Object
  implements:
  - Sdl.MultiTerm.TMO.Interop.Termbase
  - Sdl.MultiTerm.TMO.Interop.ITermbase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.InteropServices.GuidAttribute
    ctor: System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: FADF0A68-FA7D-4633-955D-B3CDB2D44FDD
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
    ctor: System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ClassInterfaceType
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise
  id: Reorganise
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Reorganise()
  nameWithType: TermbaseClass.ITermbase.Reorganise()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbase.Reorganise()
    content.vb: Public Overridable Sub Reorganise Implements ITermbase.Reorganise
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  nameWithType.vb: TermbaseClass.Reorganise()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise()
  name.vb: Reorganise()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms(System.String,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms(System.String,System.String,System.String)
  id: GetHomonyms(System.String,System.String,System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.GetHomonyms(String, String, String)
  nameWithType: TermbaseClass.ITermbase.GetHomonyms(String, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual Homonyms ITermbase.GetHomonyms(string Index, string Source, string Target)
    parameters:
    - id: Index
      type: System.String
    - id: Source
      type: System.String
    - id: Target
      type: System.String
    return:
      type: Sdl.MultiTerm.TMO.Interop.Homonyms
    content.vb: Public Overridable Function GetHomonyms(Index As String, Source As String, Target As String) As Homonyms Implements ITermbase.GetHomonyms
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  nameWithType.vb: TermbaseClass.GetHomonyms(String, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms(System.String, System.String, System.String)
  name.vb: GetHomonyms(String, String, String)
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete
  id: Delete
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Delete()
  nameWithType: TermbaseClass.ITermbase.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Delete()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbase.Delete()
    content.vb: Public Overridable Sub Delete Implements ITermbase.Delete
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  nameWithType.vb: TermbaseClass.Delete()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete()
  name.vb: Delete()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close
  id: Close
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Close()
  nameWithType: TermbaseClass.ITermbase.Close()
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Close()
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbase.Close()
    content.vb: Public Overridable Sub Close Implements ITermbase.Close
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  nameWithType.vb: TermbaseClass.Close()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close()
  name.vb: Close()
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile(System.String)
  id: ExtractToFile(System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ExtractToFile(String)
  nameWithType: TermbaseClass.ITermbase.ExtractToFile(String)
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbase.ExtractToFile(string bstr_localFile)
    parameters:
    - id: bstr_localFile
      type: System.String
    content.vb: Public Overridable Sub ExtractToFile(bstr_localFile As String) Implements ITermbase.ExtractToFile
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  nameWithType.vb: TermbaseClass.ExtractToFile(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile(System.String)
  name.vb: ExtractToFile(String)
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise(System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise(System.Boolean,System.Boolean,System.Int32)
  id: _Reorganise(System.Boolean,System.Boolean,System.Int32)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._Reorganise(Boolean, Boolean, Int32)
  nameWithType: TermbaseClass.ITermbase._Reorganise(Boolean, Boolean, Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean, System.Boolean, System.Int32)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual void ITermbase._Reorganise(bool vb_encrypt, bool vb_markReadOnly, int l_expiryDate)
    parameters:
    - id: vb_encrypt
      type: System.Boolean
    - id: vb_markReadOnly
      type: System.Boolean
    - id: l_expiryDate
      type: System.Int32
    content.vb: Public Overridable Sub _Reorganise(vb_encrypt As Boolean, vb_markReadOnly As Boolean, l_expiryDate As Integer) Implements ITermbase._Reorganise
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  nameWithType.vb: TermbaseClass._Reorganise(Boolean, Boolean, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise(System.Boolean, System.Boolean, System.Int32)
  name.vb: _Reorganise(Boolean, Boolean, Int32)
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB(System.Int32,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB(System.Int32,System.String,System.String)
  id: AddBLOB(System.Int32,System.String,System.String)
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.AddBLOB(Int32, String, String)
  nameWithType: TermbaseClass.ITermbase.AddBLOB(Int32, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32, System.String, System.String)
  type: Method
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int ITermbase.AddBLOB(int EntryID, string tag, string blob)
    parameters:
    - id: EntryID
      type: System.Int32
    - id: tag
      type: System.String
    - id: blob
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Overridable Function AddBLOB(EntryID As Integer, tag As String, blob As String) As Integer Implements ITermbase.AddBLOB
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  nameWithType.vb: TermbaseClass.AddBLOB(Int32, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB(System.Int32, System.String, System.String)
  name.vb: AddBLOB(Int32, String, String)
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  id: Entries
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Entries
  nameWithType: TermbaseClass.ITermbase.Entries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual Entries ITermbase.Entries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.Entries
    content.vb: Public Overridable ReadOnly Property Entries As Entries Implements ITermbase.Entries
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  nameWithType.vb: TermbaseClass.Entries
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  name.vb: Entries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  id: Definition
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Definition
  nameWithType: TermbaseClass.ITermbase.Definition
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual TermbaseDefinition ITermbase.Definition { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
    content.vb: Public Overridable ReadOnly Property Definition As TermbaseDefinition Implements ITermbase.Definition
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  nameWithType.vb: TermbaseClass.Definition
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  name.vb: Definition
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  id: Search
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Search
  nameWithType: TermbaseClass.ITermbase.Search
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual TermbaseSearch ITermbase.Search { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
    content.vb: Public Overridable ReadOnly Property Search As TermbaseSearch Implements ITermbase.Search
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  nameWithType.vb: TermbaseClass.Search
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  name.vb: Search
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  id: Browse
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Browse
  nameWithType: TermbaseClass.ITermbase.Browse
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual TermbaseBrowser ITermbase.Browse { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
    content.vb: Public Overridable ReadOnly Property Browse As TermbaseBrowser Implements ITermbase.Browse
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  nameWithType.vb: TermbaseClass.Browse
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  name.vb: Browse
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  id: Information
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Information
  nameWithType: TermbaseClass.ITermbase.Information
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual TermbaseInformation ITermbase.Information { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
    content.vb: Public Overridable ReadOnly Property Information As TermbaseInformation Implements ITermbase.Information
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  nameWithType.vb: TermbaseClass.Information
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  name.vb: Information
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  id: FilterDefinitions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.FilterDefinitions
  nameWithType: TermbaseClass.ITermbase.FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual FilterDefinitions ITermbase.FilterDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
    content.vb: Public Overridable ReadOnly Property FilterDefinitions As FilterDefinitions Implements ITermbase.FilterDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  nameWithType.vb: TermbaseClass.FilterDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  name.vb: FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  id: InputModelDefinitions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.InputModelDefinitions
  nameWithType: TermbaseClass.ITermbase.InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual InputModelDefinitions ITermbase.InputModelDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
    content.vb: Public Overridable ReadOnly Property InputModelDefinitions As InputModelDefinitions Implements ITermbase.InputModelDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  nameWithType.vb: TermbaseClass.InputModelDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  name.vb: InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  id: ImportDefinitions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ImportDefinitions
  nameWithType: TermbaseClass.ITermbase.ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual ImportDefinitions ITermbase.ImportDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
    content.vb: Public Overridable ReadOnly Property ImportDefinitions As ImportDefinitions Implements ITermbase.ImportDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  nameWithType.vb: TermbaseClass.ImportDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  name.vb: ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  id: ExportDefinitions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ExportDefinitions
  nameWithType: TermbaseClass.ITermbase.ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual ExportDefinitions ITermbase.ExportDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
    content.vb: Public Overridable ReadOnly Property ExportDefinitions As ExportDefinitions Implements ITermbase.ExportDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  nameWithType.vb: TermbaseClass.ExportDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  name.vb: ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  id: LayoutDefinitions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.LayoutDefinitions
  nameWithType: TermbaseClass.ITermbase.LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual LayoutDefinitions ITermbase.LayoutDefinitions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
    content.vb: Public Overridable ReadOnly Property LayoutDefinitions As LayoutDefinitions Implements ITermbase.LayoutDefinitions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  nameWithType.vb: TermbaseClass.LayoutDefinitions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  name.vb: LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  id: Name
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.Name
  nameWithType: TermbaseClass.ITermbase.Name
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String Implements ITermbase.Name
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  nameWithType.vb: TermbaseClass.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  id: ActiveFilter
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ActiveFilter
  nameWithType: TermbaseClass.ITermbase.ActiveFilter
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual FilterDefinition ITermbase.ActiveFilter { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.FilterDefinition
    content.vb: Public Overridable ReadOnly Property ActiveFilter As FilterDefinition Implements ITermbase.ActiveFilter
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  nameWithType.vb: TermbaseClass.ActiveFilter
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  name.vb: ActiveFilter
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  id: AccessPermissions
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.AccessPermissions
  nameWithType: TermbaseClass.ITermbase.AccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual TermbaseAccessPermissions ITermbase.AccessPermissions { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
    content.vb: Public Overridable ReadOnly Property AccessPermissions As TermbaseAccessPermissions Implements ITermbase.AccessPermissions
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  nameWithType.vb: TermbaseClass.AccessPermissions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  name.vb: AccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  id: IncompleteEntries
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.IncompleteEntries
  nameWithType: TermbaseClass.ITermbase.IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual IncompleteEntries ITermbase.IncompleteEntries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
    content.vb: Public Overridable ReadOnly Property IncompleteEntries As IncompleteEntries Implements ITermbase.IncompleteEntries
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  nameWithType.vb: TermbaseClass.IncompleteEntries
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  name.vb: IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  id: LockedEntries
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.LockedEntries
  nameWithType: TermbaseClass.ITermbase.LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual LockedEntries ITermbase.LockedEntries { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LockedEntries
    content.vb: Public Overridable ReadOnly Property LockedEntries As LockedEntries Implements ITermbase.LockedEntries
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  nameWithType.vb: TermbaseClass.LockedEntries
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  name.vb: LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  id: DefaultEntryClass
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.DefaultEntryClass
  nameWithType: TermbaseClass.ITermbase.DefaultEntryClass
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.DefaultEntryClass { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DefaultEntryClass As String Implements ITermbase.DefaultEntryClass
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  nameWithType.vb: TermbaseClass.DefaultEntryClass
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  name.vb: DefaultEntryClass
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  id: IsReadOnly
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.IsReadOnly
  nameWithType: TermbaseClass.ITermbase.IsReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool ITermbase.IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean Implements ITermbase.IsReadOnly
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  nameWithType.vb: TermbaseClass.IsReadOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  name.vb: IsReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  id: ChangeDate
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ChangeDate
  nameWithType: TermbaseClass.ITermbase.ChangeDate
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual DateTime ITermbase.ChangeDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable ReadOnly Property ChangeDate As Date Implements ITermbase.ChangeDate
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  nameWithType.vb: TermbaseClass.ChangeDate
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  name.vb: ChangeDate
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  id: _Cookie
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._Cookie
  nameWithType: TermbaseClass.ITermbase._Cookie
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase._Cookie { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property _Cookie As String Implements ITermbase._Cookie
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  nameWithType.vb: TermbaseClass._Cookie
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  name.vb: _Cookie
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  id: _IsLocal
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._IsLocal
  nameWithType: TermbaseClass.ITermbase._IsLocal
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool ITermbase._IsLocal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property _IsLocal As Boolean Implements ITermbase._IsLocal
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  nameWithType.vb: TermbaseClass._IsLocal
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  name.vb: _IsLocal
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  id: _DefaultEntryClassID
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._DefaultEntryClassID
  nameWithType: TermbaseClass.ITermbase._DefaultEntryClassID
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual int ITermbase._DefaultEntryClassID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property _DefaultEntryClassID As Integer Implements ITermbase._DefaultEntryClassID
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  nameWithType.vb: TermbaseClass._DefaultEntryClassID
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  name.vb: _DefaultEntryClassID
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  id: ExpiryDate
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.ExpiryDate
  nameWithType: TermbaseClass.ITermbase.ExpiryDate
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual DateTime ITermbase.ExpiryDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable ReadOnly Property ExpiryDate As Date Implements ITermbase.ExpiryDate
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  nameWithType.vb: TermbaseClass.ExpiryDate
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  name.vb: ExpiryDate
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  id: DownloadedCopyrightIcoPath
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.DownloadedCopyrightIcoPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightIcoPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.DownloadedCopyrightIcoPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DownloadedCopyrightIcoPath As String Implements ITermbase.DownloadedCopyrightIcoPath
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightIcoPath
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  name.vb: DownloadedCopyrightIcoPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  id: DownloadedCopyrightSplashPath
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.DownloadedCopyrightSplashPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightSplashPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.DownloadedCopyrightSplashPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DownloadedCopyrightSplashPath As String Implements ITermbase.DownloadedCopyrightSplashPath
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightSplashPath
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  name.vb: DownloadedCopyrightSplashPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  id: DownloadedCopyrightInfoPath
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.DownloadedCopyrightInfoPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightInfoPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.DownloadedCopyrightInfoPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DownloadedCopyrightInfoPath As String Implements ITermbase.DownloadedCopyrightInfoPath
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightInfoPath
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  name.vb: DownloadedCopyrightInfoPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  id: CopyrightText
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.CopyrightText
  nameWithType: TermbaseClass.ITermbase.CopyrightText
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase.CopyrightText { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property CopyrightText As String Implements ITermbase.CopyrightText
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  nameWithType.vb: TermbaseClass.CopyrightText
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  name.vb: CopyrightText
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  id: _TermbaseConnector
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._TermbaseConnector
  nameWithType: TermbaseClass.ITermbase._TermbaseConnector
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual object ITermbase._TermbaseConnector { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overridable ReadOnly Property _TermbaseConnector As Object Implements ITermbase._TermbaseConnector
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  nameWithType.vb: TermbaseClass._TermbaseConnector
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  name.vb: _TermbaseConnector
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  id: _Path
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._Path
  nameWithType: TermbaseClass.ITermbase._Path
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase._Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property _Path As String Implements ITermbase._Path
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  nameWithType.vb: TermbaseClass._Path
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  name.vb: _Path
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  id: LockedEntryInfos
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.LockedEntryInfos
  nameWithType: TermbaseClass.ITermbase.LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual LockedEntryInfos ITermbase.LockedEntryInfos { get; }
    parameters: []
    return:
      type: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
    content.vb: Public Overridable ReadOnly Property LockedEntryInfos As LockedEntryInfos Implements ITermbase.LockedEntryInfos
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  nameWithType.vb: TermbaseClass.LockedEntryInfos
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  name.vb: LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  id: _TermbaseAPIName
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase._TermbaseAPIName
  nameWithType: TermbaseClass.ITermbase._TermbaseAPIName
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual string ITermbase._TermbaseAPIName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property _TermbaseAPIName As String Implements ITermbase._TermbaseAPIName
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  nameWithType.vb: TermbaseClass._TermbaseAPIName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  name.vb: _TermbaseAPIName
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  commentId: P:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  id: IsPublished
  isEii: true
  parent: Sdl.MultiTerm.TMO.Interop.TermbaseClass
  langs:
  - csharp
  - vb
  name: ITermbase.IsPublished
  nameWithType: TermbaseClass.ITermbase.IsPublished
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  type: Property
  source:
    path: Sdl.MultiTerm.TMO.Interop
    isExternal: true
  assemblies:
  - Sdl.MultiTerm.TMO.Interop
  namespace: Sdl.MultiTerm.TMO.Interop
  syntax:
    content: public virtual bool ITermbase.IsPublished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsPublished As Boolean Implements ITermbase.IsPublished
  overload: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished*
  implements:
  - Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  nameWithType.vb: TermbaseClass.IsPublished
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  name.vb: IsPublished
references:
- uid: Sdl.MultiTerm.TMO.Interop
  commentId: N:Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Sdl.MultiTerm.TMO.Interop
  nameWithType: Sdl.MultiTerm.TMO.Interop
  fullName: Sdl.MultiTerm.TMO.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.MultiTerm.TMO.Interop.Termbase
  commentId: T:Sdl.MultiTerm.TMO.Interop.Termbase
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Termbase
  nameWithType: Termbase
  fullName: Sdl.MultiTerm.TMO.Interop.Termbase
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase
  commentId: T:Sdl.MultiTerm.TMO.Interop.ITermbase
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ITermbase
  nameWithType: ITermbase
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise
  isExternal: true
  name: ITermbase.Reorganise
  nameWithType: TermbaseClass.ITermbase.Reorganise
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  nameWithType.vb: TermbaseClass.Reorganise
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Reorganise
  name.vb: Reorganise
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Reorganise()
  nameWithType: ITermbase.Reorganise()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
    name: Reorganise
    nameWithType: ITermbase.Reorganise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
    name: Reorganise
    nameWithType: ITermbase.Reorganise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Reorganise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms
  isExternal: true
  name: ITermbase.GetHomonyms
  nameWithType: TermbaseClass.ITermbase.GetHomonyms
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms
  nameWithType.vb: TermbaseClass.GetHomonyms
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.GetHomonyms
  name.vb: GetHomonyms
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: GetHomonyms(String, String, String)
  nameWithType: ITermbase.GetHomonyms(String, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String, System.String, System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
    name: GetHomonyms
    nameWithType: ITermbase.GetHomonyms
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms(System.String,System.String,System.String)
    name: GetHomonyms
    nameWithType: ITermbase.GetHomonyms
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.GetHomonyms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.MultiTerm.TMO.Interop.Homonyms
  commentId: T:Sdl.MultiTerm.TMO.Interop.Homonyms
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Homonyms
  nameWithType: Homonyms
  fullName: Sdl.MultiTerm.TMO.Interop.Homonyms
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete
  isExternal: true
  name: ITermbase.Delete
  nameWithType: TermbaseClass.ITermbase.Delete
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  nameWithType.vb: TermbaseClass.Delete
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Delete
  name.vb: Delete
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Delete()
  nameWithType: ITermbase.Delete()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
    name: Delete
    nameWithType: ITermbase.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
    name: Delete
    nameWithType: ITermbase.Delete
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close
  isExternal: true
  name: ITermbase.Close
  nameWithType: TermbaseClass.ITermbase.Close
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  nameWithType.vb: TermbaseClass.Close
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Close
  name.vb: Close
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.Close
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Close()
  nameWithType: ITermbase.Close()
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Close()
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
    name: Close
    nameWithType: ITermbase.Close
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
    name: Close
    nameWithType: ITermbase.Close
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile
  isExternal: true
  name: ITermbase.ExtractToFile
  nameWithType: TermbaseClass.ITermbase.ExtractToFile
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile
  nameWithType.vb: TermbaseClass.ExtractToFile
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExtractToFile
  name.vb: ExtractToFile
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ExtractToFile(String)
  nameWithType: ITermbase.ExtractToFile(String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
    name: ExtractToFile
    nameWithType: ITermbase.ExtractToFile
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile(System.String)
    name: ExtractToFile
    nameWithType: ITermbase.ExtractToFile
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExtractToFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise
  isExternal: true
  name: ITermbase._Reorganise
  nameWithType: TermbaseClass.ITermbase._Reorganise
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise
  nameWithType.vb: TermbaseClass._Reorganise
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Reorganise
  name.vb: _Reorganise
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _Reorganise(Boolean, Boolean, Int32)
  nameWithType: ITermbase._Reorganise(Boolean, Boolean, Int32)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean, System.Boolean, System.Int32)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
    name: _Reorganise
    nameWithType: ITermbase._Reorganise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise(System.Boolean,System.Boolean,System.Int32)
    name: _Reorganise
    nameWithType: ITermbase._Reorganise
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Reorganise
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB
  isExternal: true
  name: ITermbase.AddBLOB
  nameWithType: TermbaseClass.ITermbase.AddBLOB
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB
  nameWithType.vb: TermbaseClass.AddBLOB
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AddBLOB
  name.vb: AddBLOB
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  commentId: M:Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: AddBLOB(Int32, String, String)
  nameWithType: ITermbase.AddBLOB(Int32, String, String)
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32, System.String, System.String)
  spec.csharp:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
    name: AddBLOB
    nameWithType: ITermbase.AddBLOB
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB(System.Int32,System.String,System.String)
    name: AddBLOB
    nameWithType: ITermbase.AddBLOB
    fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AddBLOB
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  isExternal: true
  name: ITermbase.Entries
  nameWithType: TermbaseClass.ITermbase.Entries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  nameWithType.vb: TermbaseClass.Entries
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Entries
  name.vb: Entries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Entries
  nameWithType: ITermbase.Entries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Entries
- uid: Sdl.MultiTerm.TMO.Interop.Entries
  commentId: T:Sdl.MultiTerm.TMO.Interop.Entries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: Entries
  nameWithType: Entries
  fullName: Sdl.MultiTerm.TMO.Interop.Entries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  isExternal: true
  name: ITermbase.Definition
  nameWithType: TermbaseClass.ITermbase.Definition
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  nameWithType.vb: TermbaseClass.Definition
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Definition
  name.vb: Definition
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Definition
  nameWithType: ITermbase.Definition
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Definition
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseDefinition
  nameWithType: TermbaseDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseDefinition
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  isExternal: true
  name: ITermbase.Search
  nameWithType: TermbaseClass.ITermbase.Search
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  nameWithType.vb: TermbaseClass.Search
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Search
  name.vb: Search
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Search
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Search
  nameWithType: ITermbase.Search
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Search
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseSearch
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseSearch
  nameWithType: TermbaseSearch
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseSearch
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  isExternal: true
  name: ITermbase.Browse
  nameWithType: TermbaseClass.ITermbase.Browse
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  nameWithType.vb: TermbaseClass.Browse
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Browse
  name.vb: Browse
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Browse
  nameWithType: ITermbase.Browse
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Browse
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseBrowser
  nameWithType: TermbaseBrowser
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseBrowser
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  isExternal: true
  name: ITermbase.Information
  nameWithType: TermbaseClass.ITermbase.Information
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  nameWithType.vb: TermbaseClass.Information
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Information
  name.vb: Information
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Information
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Information
  nameWithType: ITermbase.Information
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Information
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseInformation
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseInformation
  nameWithType: TermbaseInformation
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseInformation
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  isExternal: true
  name: ITermbase.FilterDefinitions
  nameWithType: TermbaseClass.ITermbase.FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  nameWithType.vb: TermbaseClass.FilterDefinitions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.FilterDefinitions
  name.vb: FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: FilterDefinitions
  nameWithType: ITermbase.FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.FilterDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: FilterDefinitions
  nameWithType: FilterDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.FilterDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  isExternal: true
  name: ITermbase.InputModelDefinitions
  nameWithType: TermbaseClass.ITermbase.InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  nameWithType.vb: TermbaseClass.InputModelDefinitions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.InputModelDefinitions
  name.vb: InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: InputModelDefinitions
  nameWithType: ITermbase.InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: InputModelDefinitions
  nameWithType: InputModelDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.InputModelDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  isExternal: true
  name: ITermbase.ImportDefinitions
  nameWithType: TermbaseClass.ITermbase.ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  nameWithType.vb: TermbaseClass.ImportDefinitions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ImportDefinitions
  name.vb: ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ImportDefinitions
  nameWithType: ITermbase.ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.ImportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ImportDefinitions
  nameWithType: ImportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ImportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  isExternal: true
  name: ITermbase.ExportDefinitions
  nameWithType: TermbaseClass.ITermbase.ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  nameWithType.vb: TermbaseClass.ExportDefinitions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExportDefinitions
  name.vb: ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ExportDefinitions
  nameWithType: ITermbase.ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.ExportDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: ExportDefinitions
  nameWithType: ExportDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ExportDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  isExternal: true
  name: ITermbase.LayoutDefinitions
  nameWithType: TermbaseClass.ITermbase.LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  nameWithType.vb: TermbaseClass.LayoutDefinitions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LayoutDefinitions
  name.vb: LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: LayoutDefinitions
  nameWithType: ITermbase.LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
  commentId: T:Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LayoutDefinitions
  nameWithType: LayoutDefinitions
  fullName: Sdl.MultiTerm.TMO.Interop.LayoutDefinitions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  isExternal: true
  name: ITermbase.Name
  nameWithType: TermbaseClass.ITermbase.Name
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  nameWithType.vb: TermbaseClass.Name
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Name
  name.vb: Name
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.Name
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: Name
  nameWithType: ITermbase.Name
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.Name
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  isExternal: true
  name: ITermbase.ActiveFilter
  nameWithType: TermbaseClass.ITermbase.ActiveFilter
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  nameWithType.vb: TermbaseClass.ActiveFilter
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ActiveFilter
  name.vb: ActiveFilter
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ActiveFilter
  nameWithType: ITermbase.ActiveFilter
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ActiveFilter
- uid: Sdl.MultiTerm.TMO.Interop.FilterDefinition
  commentId: T:Sdl.MultiTerm.TMO.Interop.FilterDefinition
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: FilterDefinition
  nameWithType: FilterDefinition
  fullName: Sdl.MultiTerm.TMO.Interop.FilterDefinition
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  isExternal: true
  name: ITermbase.AccessPermissions
  nameWithType: TermbaseClass.ITermbase.AccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  nameWithType.vb: TermbaseClass.AccessPermissions
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.AccessPermissions
  name.vb: AccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: AccessPermissions
  nameWithType: ITermbase.AccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.AccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
  commentId: T:Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: TermbaseAccessPermissions
  nameWithType: TermbaseAccessPermissions
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseAccessPermissions
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  isExternal: true
  name: ITermbase.IncompleteEntries
  nameWithType: TermbaseClass.ITermbase.IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  nameWithType.vb: TermbaseClass.IncompleteEntries
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IncompleteEntries
  name.vb: IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: IncompleteEntries
  nameWithType: ITermbase.IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.IncompleteEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: IncompleteEntries
  nameWithType: IncompleteEntries
  fullName: Sdl.MultiTerm.TMO.Interop.IncompleteEntries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  isExternal: true
  name: ITermbase.LockedEntries
  nameWithType: TermbaseClass.ITermbase.LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  nameWithType.vb: TermbaseClass.LockedEntries
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntries
  name.vb: LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: LockedEntries
  nameWithType: ITermbase.LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.LockedEntries
  commentId: T:Sdl.MultiTerm.TMO.Interop.LockedEntries
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LockedEntries
  nameWithType: LockedEntries
  fullName: Sdl.MultiTerm.TMO.Interop.LockedEntries
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  isExternal: true
  name: ITermbase.DefaultEntryClass
  nameWithType: TermbaseClass.ITermbase.DefaultEntryClass
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  nameWithType.vb: TermbaseClass.DefaultEntryClass
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DefaultEntryClass
  name.vb: DefaultEntryClass
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: DefaultEntryClass
  nameWithType: ITermbase.DefaultEntryClass
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DefaultEntryClass
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  isExternal: true
  name: ITermbase.IsReadOnly
  nameWithType: TermbaseClass.ITermbase.IsReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  nameWithType.vb: TermbaseClass.IsReadOnly
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsReadOnly
  name.vb: IsReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: IsReadOnly
  nameWithType: ITermbase.IsReadOnly
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsReadOnly
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  isExternal: true
  name: ITermbase.ChangeDate
  nameWithType: TermbaseClass.ITermbase.ChangeDate
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  nameWithType.vb: TermbaseClass.ChangeDate
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ChangeDate
  name.vb: ChangeDate
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ChangeDate
  nameWithType: ITermbase.ChangeDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ChangeDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  isExternal: true
  name: ITermbase._Cookie
  nameWithType: TermbaseClass.ITermbase._Cookie
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  nameWithType.vb: TermbaseClass._Cookie
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Cookie
  name.vb: _Cookie
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _Cookie
  nameWithType: ITermbase._Cookie
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Cookie
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  isExternal: true
  name: ITermbase._IsLocal
  nameWithType: TermbaseClass.ITermbase._IsLocal
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  nameWithType.vb: TermbaseClass._IsLocal
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._IsLocal
  name.vb: _IsLocal
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _IsLocal
  nameWithType: ITermbase._IsLocal
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._IsLocal
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  isExternal: true
  name: ITermbase._DefaultEntryClassID
  nameWithType: TermbaseClass.ITermbase._DefaultEntryClassID
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  nameWithType.vb: TermbaseClass._DefaultEntryClassID
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._DefaultEntryClassID
  name.vb: _DefaultEntryClassID
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _DefaultEntryClassID
  nameWithType: ITermbase._DefaultEntryClassID
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._DefaultEntryClassID
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  isExternal: true
  name: ITermbase.ExpiryDate
  nameWithType: TermbaseClass.ITermbase.ExpiryDate
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  nameWithType.vb: TermbaseClass.ExpiryDate
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.ExpiryDate
  name.vb: ExpiryDate
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: ExpiryDate
  nameWithType: ITermbase.ExpiryDate
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.ExpiryDate
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  isExternal: true
  name: ITermbase.DownloadedCopyrightIcoPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightIcoPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightIcoPath
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightIcoPath
  name.vb: DownloadedCopyrightIcoPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: DownloadedCopyrightIcoPath
  nameWithType: ITermbase.DownloadedCopyrightIcoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightIcoPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  isExternal: true
  name: ITermbase.DownloadedCopyrightSplashPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightSplashPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightSplashPath
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightSplashPath
  name.vb: DownloadedCopyrightSplashPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: DownloadedCopyrightSplashPath
  nameWithType: ITermbase.DownloadedCopyrightSplashPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightSplashPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  isExternal: true
  name: ITermbase.DownloadedCopyrightInfoPath
  nameWithType: TermbaseClass.ITermbase.DownloadedCopyrightInfoPath
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  nameWithType.vb: TermbaseClass.DownloadedCopyrightInfoPath
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.DownloadedCopyrightInfoPath
  name.vb: DownloadedCopyrightInfoPath
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: DownloadedCopyrightInfoPath
  nameWithType: ITermbase.DownloadedCopyrightInfoPath
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.DownloadedCopyrightInfoPath
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  isExternal: true
  name: ITermbase.CopyrightText
  nameWithType: TermbaseClass.ITermbase.CopyrightText
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  nameWithType.vb: TermbaseClass.CopyrightText
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.CopyrightText
  name.vb: CopyrightText
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: CopyrightText
  nameWithType: ITermbase.CopyrightText
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.CopyrightText
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  isExternal: true
  name: ITermbase._TermbaseConnector
  nameWithType: TermbaseClass.ITermbase._TermbaseConnector
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  nameWithType.vb: TermbaseClass._TermbaseConnector
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseConnector
  name.vb: _TermbaseConnector
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _TermbaseConnector
  nameWithType: ITermbase._TermbaseConnector
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseConnector
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  isExternal: true
  name: ITermbase._Path
  nameWithType: TermbaseClass.ITermbase._Path
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  nameWithType.vb: TermbaseClass._Path
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._Path
  name.vb: _Path
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._Path
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _Path
  nameWithType: ITermbase._Path
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._Path
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  isExternal: true
  name: ITermbase.LockedEntryInfos
  nameWithType: TermbaseClass.ITermbase.LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  nameWithType.vb: TermbaseClass.LockedEntryInfos
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.LockedEntryInfos
  name.vb: LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: LockedEntryInfos
  nameWithType: ITermbase.LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
  commentId: T:Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
  parent: Sdl.MultiTerm.TMO.Interop
  isExternal: true
  name: LockedEntryInfos
  nameWithType: LockedEntryInfos
  fullName: Sdl.MultiTerm.TMO.Interop.LockedEntryInfos
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  isExternal: true
  name: ITermbase._TermbaseAPIName
  nameWithType: TermbaseClass.ITermbase._TermbaseAPIName
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  nameWithType.vb: TermbaseClass._TermbaseAPIName
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass._TermbaseAPIName
  name.vb: _TermbaseAPIName
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: _TermbaseAPIName
  nameWithType: ITermbase._TermbaseAPIName
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase._TermbaseAPIName
- uid: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished*
  commentId: Overload:Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  isExternal: true
  name: ITermbase.IsPublished
  nameWithType: TermbaseClass.ITermbase.IsPublished
  fullName: Sdl.MultiTerm.TMO.Interop.TermbaseClass.Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  nameWithType.vb: TermbaseClass.IsPublished
  fullName.vb: Sdl.MultiTerm.TMO.Interop.TermbaseClass.IsPublished
  name.vb: IsPublished
- uid: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  commentId: P:Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
  parent: Sdl.MultiTerm.TMO.Interop.ITermbase
  isExternal: true
  name: IsPublished
  nameWithType: ITermbase.IsPublished
  fullName: Sdl.MultiTerm.TMO.Interop.ITermbase.IsPublished
